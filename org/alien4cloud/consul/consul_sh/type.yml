tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.consul.consul_sh
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.consul.pub:2.0.0-SNAPSHOT

node_types:
  org.alien4cloud.consul.consul_sh.nodes.ConsulAgent:
    abstract: true
    derived_from: org.alien4cloud.consul.pub.nodes.ConsulAgent
    description: >
      Base Consul discovery service installation.
    tags:
      icon: /images/consul.png
    capabilities:
      consul_agent:
        type: org.alien4cloud.consul.pub.capabilities.ConsulAgent
        valid_source_types: [org.alien4cloud.consul.pub.capabilities.ConsulClient]
    properties:
      download_url:
        description: The URL to download the consul archive.
        type: string
        required: true
        default: https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip
      data_dir:
        description: The location on the FS where consul will store data.
        type: string
        required: true
        default: /var/consul
      tls_enabled:
        description: Defines if the communication with the consul agent will be secured (HTTPS).
        type: boolean
        required: true
        default: false
      ca_passphrase:
        description: The provided CA certificate passphrase.
        type: string
        required: false
      encrypt_key:
        description: The key to encrypt gossip exchanges into consul cluster.
        type: string
        required: false
    # attributes:
    #   consul_client_address: { get_operation_output: [ SELF, Standard, start, CONSUL_CLIENT_ADDRESS ] }
    #   consul_server_address: { get_operation_output: [ SELF, Standard, start, CONSUL_SERVER_ADDRESS ] }
    #   api_port: { get_operation_output: [ SELF, Standard, start, API_PORT ] }

  org.alien4cloud.consul.consul_sh.nodes.ConsulServer:
    derived_from: org.alien4cloud.consul.pub.nodes.ConsulAgent
    description: >
      Consul discovery service installation (server node).
    properties:
      agent_mode:
        description: Indicate the consul agent mode (actually server).
        type: string
        constraints:
          - equal: server
        required: true
        default: server
    capabilities:
      consul_server:
        type: org.alien4cloud.consul.pub.capabilities.ConsulServer
        valid_source_types: [org.alien4cloud.consul.pub.capabilities.ConsulClient]
    interfaces:
      Standard:
        create:
          inputs:
            CONSUL_DATA_DIR: { get_property: [SELF, data_dir] }
            CONSUL_DOWNLOAD_URL: { get_property: [SELF, download_url] }
          implementation: scripts/consul/create_consul.sh
        configure:
          inputs:
            CONSUL_AGENT_MODE: { get_property: [SELF, agent_mode] }
            CONSUL_DATA_DIR: { get_property: [SELF, data_dir] }
            CONSUL_BIND_ADDRESS: { get_attribute: [HOST, ip_address] }
            CONSUL_API_PORT: { get_property: [SELF, consul_agent, port] }
            TLS_ENABLED: { get_property: [SELF, tls_enabled] }
            CA_PASSPHRASE: { get_property: [SELF, ca_passphrase] }
            ENCRYPT_KEY: { get_property: [SELF, encrypt_key] }
          implementation: scripts/consul/start_consul_agent.sh
        start:
          inputs:
            CONSUL_ADDRESS: { get_attribute: [HOST, ip_address] }
          implementation: scripts/consul/join_consul_servers.sh
    artifacts:
      - configs:
          file: config/consul
          type: tosca.artifacts.File
      - ssl:
          file: ssl
          type: tosca.artifacts.File
      - commons:
          file: scripts/commons
          type: tosca.artifacts.File

  org.alien4cloud.consul.consul_sh.nodes.ConsulClient:
    derived_from: org.alien4cloud.consul.pub.nodes.ConsulAgent
    description: >
      Consul discovery service installation (client node).
    properties:
      agent_mode:
        description: Indicate the consul agent mode (actually client).
        type: string
        constraints:
          - equal: client
        default: client
    requirements:
      - consul_server:
          capability: org.alien4cloud.consul.pub.capabilities.ConsulServer
          relationship: org.alien4cloud.consul.consul_sh.relationships.JoinCluster
    interfaces:
      Standard:
        create:
          inputs:
            CONSUL_DATA_DIR: { get_property: [SELF, data_dir] }
            CONSUL_DOWNLOAD_URL: { get_property: [SELF, download_url] }
          implementation: scripts/consul/create_consul.sh
        start:
          inputs:
            CONSUL_AGENT_MODE: { get_property: [SELF, agent_mode] }
            CONSUL_DATA_DIR: { get_property: [SELF, data_dir] }
            CONSUL_BIND_ADDRESS: { get_attribute: [HOST, ip_address] }
            CONSUL_API_PORT: { get_property: [SELF, consul_agent, port] }
            TLS_ENABLED: { get_property: [SELF, tls_enabled] }
            CA_PASSPHRASE: { get_property: [SELF, ca_passphrase] }
            ENCRYPT_KEY: { get_property: [SELF, encrypt_key] }
          implementation: scripts/consul/start_consul_agent.sh
    artifacts:
      - configs:
          file: config/consul
          type: tosca.artifacts.File
      - ssl:
          file: ssl
          type: tosca.artifacts.File
      - commons:
          file: scripts/commons
          type: tosca.artifacts.File

relationship_types:

  org.alien4cloud.consul.consul_sh.relationships.JoinCluster:
    derived_from: tosca.relationships.ConnectsTo
    description: >
      The relationship between a consul client agent and a consul server agent.
    valid_target_types: [org.alien4cloud.consul.pub.capabilities.ConsulServer]
    interfaces:
      Configure:
        add_target:
          inputs:
            CONSUL_SERVER_ADDRESS: { get_attribute: [TARGET, ip_address] }
          implementation: scripts/consul/join_consul_cluster.sh
    artifacts:
      - commons:
          file: scripts/commons
          type: tosca.artifacts.File
